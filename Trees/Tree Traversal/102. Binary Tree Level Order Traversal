/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        
      List<List<Integer>> result = new ArrayList<>();
      
      if(root==null){
        return result;
      }
        
      Queue<TreeNode> nodeQueue = new LinkedList<>();
        
      Queue<Integer> levelQueue = new LinkedList<>(); 
        
      nodeQueue.add(root);
        
      levelQueue.add(1);
        
      while(!nodeQueue.isEmpty()) {
        TreeNode node = nodeQueue.remove();
          
        int level = levelQueue.remove();
        
        List<Integer> temp = null;
          
        if(result.size() < level) {
            temp = new ArrayList<>();
            result.add(temp);
        } else {
            temp = result.get(level - 1);
        }
          
        temp.add(node.val);
          
        if(node.left != null){
            nodeQueue.add(node.left);
            levelQueue.add(level + 1);
        }
          
        if(node.right != null){
            nodeQueue.add(node.right);
            levelQueue.add(level + 1);
        }          
      }
        
     return result;
    }
}
